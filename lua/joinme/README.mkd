JoinMe: a wifi config utility for the ESP8266 based on NodeMCU
===

[Hamish Cunningham](https://hamish.gate.ac.uk/), [Gareth
Coleman](http://l0l.org.uk/) and [The.Crowd.Works](https://the.crowd.works)

## Get your Thing on t' Internet

So you've got a shiney new ESP8266 all wired up and ready to go -- but how do
you configure it to join an existing network? This library first starts up an
access point of its own to allow you to configure it then scans for available
access points. Join the network from your phone or other device, and then make
a web request to the ESP. You'll be served a form on which you can select the
network you want to join and pass over the network key (*beware!* this is
currently over HTTP!). These credentials then get saved on the ESP, and the
device will now join the network whenever it restarts.

Hey presto, your thing is on the net :-) And, because after the restart we
don't need the code for serving the chooser form and so on, we only need a
very small portion of precious ESP memory.

## Usage

- copy j.lua and init.lua to the ESP
- restart the ESP
- the ESP will now start up into dual station and access point mode
- the hard bit (pending replacement with captive portal config):
  - join the `ESP_...` network and identify your IP, e.g. `192.168.4.2`
  - load `http://<ip prefix>.1` in your browser, e.g. `http://192.168.4.1`
- you will get a form listing available wifi networks; choose one, fill in the
  pass key and submit
- you'll get a message saying "Done..."; the ESP will now join the network
  that you specified every time it restarts
- to reset: delete the `skipj.txt` file on the ESP

## TODO

- add a reset button option via GPIO that deletes the skip file and restarts
- HTTPS
- captive portal code to redirect all requests to the server
  - get softap to include a DNS server IP in its connection data
  - listen on port 53; when anyone sends anything direct to the device IP
    (192.168.4.1)
  - for any HTTP GET send redirect to https://something.or.other/
  - for any HTTPS GET send the configure form
- why does j.aplistener get called twice?!
- [minify](https://github.com/stravant/LuaMinify) the lua, and add a Makefile
  that minifies and uploads (or [spiffyfies](https://github.com/xlfe/spiffy)
  and [flashes](https://github.com/themadinventor/esptool))
  - but note that LuaMinify doesn't work out of the box and seems not to be
    maintained

## Implementation notes
- the [first version](old/) hit the [limit of code
  size](http://www.esp8266.com/viewtopic.php?f=18&t=1242) on the ESP; it is
  important to keep the code as small as possible, and to avoid loading the
  "choose an AP" code when we don't need to
  - possibly there are methods to reduce heap consumption that might help,
    [e.g. this
    one](http://www.esp8266.com/viewtopic.php?f=24&t=1135&p=7273#p7273)
- garbage collection often doesn't seem to make an appreciable difference at
  present -- collecting available memory requires a restart
